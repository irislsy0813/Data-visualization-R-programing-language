#### get data from web

download.file("https://www.aemo.com.au/aemo/data/nem/priceanddemand/PRICE_AND_DEMAND_202009_NSW1.csv")
data<-read_csv("PRICE_AND_DEMAND_202009_NSW1.csv")
data

#### get data from html
library(rvest)

html<-read_html("https://finance.yahoo.com/quote/AAPL/analysis?p=AAPL")
tab<-html_table(html)
print(tab)

#######selected and filter data
library(tidyverse)
str(diamonds)

selected1<-select (diamonds, carat, cut, price)
selected2<-select(diamonds, -carat, -cut, -price)

filter(diamonds, (price>1000))

##"&"= and
filter(diamonds, (price>1000)&(cut=="Ideal"))

##"|"= or
filter(diamonds, (cut=="Ideal")|(color=="E"))

filter(diamonds, (cut %in% c("Ideal","Fair")))

##equal
filter(diamonds, (cut=="Fair") | (cut=="Ideal"))

filter(diamonds, !(cut %in% c("Ideal","Fair")))

###mutate() adds new variables and preserves existing ones; 
###transmute() adds new variables and drops existing ones. 

mpgsel<-select(mpg,cty,hwy)
mpgMet<-mutate(mpgsel,ctyMetric=0.425144*cty,hwyMetric=0.425144*hwy)
mpgMet

###
c(1,12,4)%>%
  mean%>%
  sqrt->out

mpgsel<-select(mpg,cty,hwy)
mpgMet<-mutate(mpgsel,ctyMetric=0.425144*cty,hwyMetric=0.425144*hwy)
mpgMet

select(mpg,cty,hwy)%>%
  mutate(ctyMetric=0.425144*cty,hwyMetric=0.425144*hwy)->mpgMet
mpgMet

### summarise data
library(tidyverse)

txhousing%>%
  group_by(year)%>%
  summarise(totalsales=sum(sales,na.rm = TRUE))->totsales
totsales

txhousing%>%
  group_by(year,city)%>%
  summarise(totalsales=sum(sales,na.rm = TRUE))->totsales2
totsales2

##reshaping and joining data

library(tidyverse)

## use wide to reshaping

ggplot(economics, aes(x=uempmed,y=psavert))+
  geom_point()
economics

##use long to reshaping

economics_long
ggplot(economics_long, aes(x=date,y=value))+
  geom_line()+
  facet_wrap(~variable, scales = "free_y")

##from wide to long

pivot_longer(economics,cols = -date,
             names_to = "variable",
             values_to = "value")->long

long

##from long to wide
economics_long%>%
  pivot_wider(id_cols = date,
              names_from=variable,
              values_from=value)->wide

wide

##combine two data frame---joined data

energy<-read_csv("energydata.csv")
energy

weather<-read_csv("weather.csv")
weather

##joining by=c("Date","State")
##inner_join(x,y)--return all rows from x with matching values in y.

all_data1<-inner_join(energy,weather)
all_data1

##left_join(x,y)--return all rows from x with matching values in y, with NA if there no match

all_data2<-left_join(energy,weather)
all_data2

##right_join(x,y)--return all rows from y with matching values in x, with NA if there no match

all_data3<-right_join(energy,weather)
all_data3

##full_join(x,y)--return all rows from x or y, with NA if there no match

all_data4<-full_join(energy,weather)
all_data4

