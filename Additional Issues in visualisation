
library(ggplot2)
library(ggthemes)
library(tidyverse)

## chenge theme 
## theme_economist()
## theme_bw()

economics%>%
  ggplot(aes(x=psavert,y=uempmed))+
  geom_point()+
  theme_classic()+
  labs(title="title")+
  xlab("xlab")+
  ylab("ylab")+
  annotate("text",x=4,y=24,label="bad times",size=3,color="red")


###在line 里group 多个time serise 的趋势(单位或y一样)

txhousing%>%
  filter(city=="Houston", date>2010)%>%
  select(date,sales,listings)->houston_sales_listings

houston_sales_listings%>%
  pivot_longer(cols=-date,
               names_to="variable",
               values_to="value")->houston_sales_listings_long

houston_sales_listings_long

  ggplot(data=houston_sales_listings_long,aes(x=date,y=value,group=variable))+
  geom_line()

  
##coord_fixed(ratio = ***) 当多个变量单位不一致-调整y轴和x轴

  houston_sales_listings%>%
    ggplot(aes(x=date,y=sales))+
    geom_line()+
    coord_fixed(ratio = 0.002)


  houston_sales_listings%>%
    ggplot(aes(x=date,y=sales))+
    geom_line()+
    coord_fixed( 0.0001)

##geom_path 在plot里有多个time serise 的趋势
  
  houston_sales_listings%>%
    ggplot(aes(x=listings,y=sales, col=date))+
    geom_path()+
    scale_color_viridis_c() ##改颜色
  
##with fitted curve

##smooth 回归线 se=FALSE 取消置信区间（confidence brand） span 平滑度 methods="lm"/"gam"/"loess"
## lm =线性回归，glm =广义线性回归，gam =广义加性模型，loess=局部回归
  
  ggplot(mpg,aes(x=displ,y=cty))+
    geom_point()+
    geom_smooth(span=0.5, se=FALSE, methods="lm")
  
  ## geom_smooth using formula "y~x"
  
  ggplot(mpg,aes(x=displ,y=cty,col=drv))+
    geom_point()+
    geom_smooth(method="lm")
    
  ##一般来讲数据越少置信区间越大,有预测置信区间越大，回归线周围数据越密集，模型越好。  
    
 ## Interactive Plots 交互图-ploty
 
 txhousing%>%
  filter(city==Houston", date>2010)%>%
  select(date, sales, listing)>house_sales_listing2
 
g<- house_sales_listing2%>%
  ggplot(aes(x=listing,t=sales, col=date))
  geom_point()+
  scale_color_viridis_c()
 
ggplotly(g) ##交互图可以用于寻找异常值
  
g2<-house_sales_listing2%>%
  mutate(Era=ifelse(date>2014,"Post 2014","pre_2014"))%>%
  ggplot(aes(x=listing,y=sales, col=Era))+
  geom_point()
    
ggplotly(g2)
 
其他交互图shiny 
 
 ################################################
 
 rm(list = ls())
library(ggplot2)

electricity<-read_csv("electricity.csv")

## Add smooth lines obtained by a LOESS estimate.

electricity%>%
  ggplot(aes(y=Demand,x=MaxTemp,col=Wend))+
  geom_point()+
  geom_smooth(method = 'loess')

## Add the line of best fit from a linear regression model.

ggplot(electricity,aes(x=MaxTemp,y=Demand,col=Wend))+
  geom_point()+geom_smooth(method = 'lm')

##Using plotly investigate the outlier 用交互图解释异常值

library(plotly)
g<-ggplot(electricity,aes(x=MaxTemp,
                   y=Demand,
                   col=Wend,
                   text=Date))+geom_point()
ggplotly(g)

###Create a path plot of the yearly exports to Germany against the yearly exports to the USA.数据处理！！！

##替换缺少值
SwissWide<-read_csv('SwissExportsFull.csv')%>%
  rename(`NA`=X154)

#Convert to long form 变长用于分类

SwissLong<-pivot_longer(data = SwissWide,
                        cols = c(-Date, -Year),   #Do not use these variables
                        names_to = 'Country',     #Column names become variable
                        values_to = 'Exports')    #All numbers are exports

#Create yearly aggregate

SwissLong%>%                    #This is much easier with long data
  select(-Date)%>%              #Eventually cannot aggregate dates
  group_by(Year,Country)%>%
  summarise(YearlyExports=sum(Exports))->SwissYearly

#Select Germany and US

SwissYearly%>%
  filter(Country %in% c('DE','US'))%>%
  pivot_wider(id_cols = Year,
              names_from = Country,
              values_from = YearlyExports)->Exports_DE_US

#Finally make plot

ggplot(Exports_DE_US,aes(x=DE,y=US,col=Year,label=Year))+
  geom_path()+
  scale_color_viridis_c()+
  geom_text()

 
