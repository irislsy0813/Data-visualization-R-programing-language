library(ggplot2)
library(tidyverse)
str(diamonds)
str(mpg)
str(economics)

ggplot(data=diamonds,mapping=aes(x=price))+
  geom_density(bw=300)
  geom_histogram(bins = 50, boundary=0, fill="blue", color="white")
  
ggplot(data=mpg,mapping=aes(y=cty))+
  geom_boxplot(notch=T)
  
ggplot(data=diamonds, mapping=aes(x=clarity))+
  geom_bar(fill="lightblue")

ggplot(data=diamonds, mapping=aes(x=carat, y=price))+
  geom_hex()

ggplot(data=diamonds, mapping=aes(x=carat, y=price))+
  geom_point(size=0.1, alpha=0.2)+
  scale_x_log10()+
  scale_y_log10()

ggplot(data=economics, mapping=aes(x=date, y=unemploy))+
  geom_line()

ggplot(data=diamonds, mapping=aes(x=cut, y=price))+
  geom_boxplot(notch=T)

ggplot(data=diamonds, mapping = aes(x=cut, y=price))+
  geom_violin()+
  coord_flip()
  
## 回归线
ggplot(data=mpg, mapping = aes(x=cyl, y=cty))+
  geom_point(position = "jitter")+
   geom_smooth(color = "skyblue", fill = "skyblue", method = "lm")
  
 ####
 library(tidyverse) will load the core tidyverse packages:ggplot2, for data visualisation. (画图，可视化数据) dplyr, for data manipulation. 
 (操控数据，过滤、排序等) tidyr, for data tidying. (清理数据，转为ggplot可用的格式) readr, for data import. (从文件中读取数据) purrr, for functional programming. 
 (提供好用的编程函数) tibble, for tibbles, a modern re-imagining of data frames. (data.frame升级款) stringr, for strings. (处理字符，查找、替换等) 
 forcats, for factors. (处理因子问题)


##basic visulisation

library(tidyverse)
library(ggplot2)

swiss<-readRDS("SwissExport.rds")

## bar
ggplot(swiss, mapping = aes(x= Region))+
  geom_bar()

head(swiss)

##density
ggplot(swiss, mapping = aes(x=ExportsJan1988))+
  geom_density()

##rug
ggplot(swiss, mapping = aes(x=ExportsJan1988))+
  geom_rug()

##boxplot 横纵坐标与其他的相反
ggplot(swiss, mapping = aes(y=ExportsJan1988))+
  geom_boxplot() 

## What do we see in these plots?
## All plots show that the Switzerland had a very small level of exports to most countries. 
## In the box plots, the quartiles and medians are all close to 0. 
## There is one very large export destination which is Germany.


##log scale

## Some data may be heavily skewed to the right. In such cases a log scale compresses together large values and stretches out small values.

swissex<-readRDS("SwissExport.rds")
ggplot(swissex,mapping = aes(x=ExportsJan1988, y=ExportsDec2018))+
  geom_point()

ggplot(swissex,mapping = aes(x=log(ExportsJan1988), y=log(ExportsDec2018)))+
  geom_point()

##或者
ggplot(swissex,
       aes(x=ExportsJan1988,
           y=ExportsDec2018))+
  geom_point()+
  scale_x_log10()+scale_y_log10()

## On the log log scale there is less overplotting. 
## Rather than have all countries in the bottom left hand corner the points are spread out over the whole plot.

## There are a number of countries that recieve no exports from Switzerland. 
## These are values of 0. Mathematically, when taking the log of zero, the result is negative infinity. 
## Note that ggplot has done something sensible and plotted these zero values along the margins of the plot. 
## However, it may be better to either add a very small value to these zeroes or exclude them altogether.


## boxplot
credit<-readRDS("Credit.rds")

ggplot(credit,mapping = aes(x=default, y=AGE))+
  geom_boxplot()

#The plot does not suggest differences between the age distribution of the default and non-default groups. 
## Age is not likely to be a useful feature in disciminating between these groups.

ggplot(credit,mapping = aes(x=default, y=LIMIT_BAL))+
  geom_boxplot()

### The plot suggests that distribution of the credit limit is higher for non-default groups

